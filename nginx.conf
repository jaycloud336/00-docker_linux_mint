events {
    worker_connections 1024;
}

http {
    # Define log format for Prometheus-style monitoring
    log_format prometheus_log
        'remote_addr="$remote_addr" '
        'status="$status" '
        'request_time="$request_time" '
        'upstream_addr="$upstream_addr" '
        'upstream_status="$upstream_status" '
        'upstream_response_time="$upstream_response_time"';

    access_log /var/log/nginx/access.log prometheus_log;

    # Load balancing between Apache servers
    upstream backend_servers {
        server web1:80;
        server web2:80;
        server web3:80;
    }

    server {
        listen 80;
        server_name localhost;

        # Main traffic routing to backend servers
        location / {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # NGINX stub status for Prometheus scraping
        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;  # NOTE: Restrict this in production
        }
    }
}

